# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "feature/add-DB" ]
  pull_request:
    branches: [ "feature/add-DB" ]

jobs:
  test:
    name: Test
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        
        image: postgres:18.0-alpine3.22
        # Provide the password for postgres
        env:
          POSTGRES_USER: nurken
          POSTGRES_PASSWORD: 123nura123
          POSTGRES_DB: furnitureShop
        ports:
          - 5433:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
    - name: install golang-migrate
      run: |
            curl -L https://github.com/golang-migrate/migrate/releases/download/v4.19.0/migrate.linux-amd64.tar.gz | tar xvz
            sudo mv migrate /usr/local/bin/
            migrate --version
    - name: Run migrations
      run: make migrateup

    - name: Test
      run: make test
